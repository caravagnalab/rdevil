ggh4x::facet_nested(~ genes + ngenes, scales = "free") +
labs(x = "", y="AUPR", fill="Algorithm") +
theme_bw() +
theme(
legend.position = "bottom",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()
)
res %>%
dplyr::group_by(ncells, ngenes, name) %>%
dplyr::summarise(median_auroc = mean(auroc), sd_auroc = sd(auroc)) %>%
dplyr::mutate(cells = "N cells", genes = "N genes") %>%
ggplot(mapping = aes(x=ncells, y=median_auroc, col=name, ymin=median_auroc-sd_auroc, ymax=median_auroc+sd_auroc)) +
geom_pointrange() +
geom_line() +
ggh4x::facet_nested(~ genes + ngenes, scales = "free") +
labs(x = "", y="AUROC", fill="Algorithm") +
theme_bw() +
theme(
legend.position = "bottom",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()
)
res %>%
dplyr::group_by(ncells, ngenes, name) %>%
dplyr::summarise(median_auroc = mean(auroc), sd_auroc = sd(auroc)) %>%
dplyr::mutate(cells = "N cells", genes = "N genes") %>%
ggplot(mapping = aes(x=ncells, y=median_auroc, col=name, ymin=median_auroc-sd_auroc, ymax=median_auroc+sd_auroc)) +
geom_pointrange() +
geom_line() +
ggh4x::facet_nested(~ genes + ngenes, scales = "free") +
labs(x = "", y="AUROC", fill="Algorithm") +
theme_bw() +
theme(
legend.position = "bottom",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()
)
res <- lapply(list.files("results/general_res/", full.names = T), readRDS) %>% do.call("bind_rows", .)
res
# read general results
res <- lapply(list.files("results/general_res/", full.names = T), readRDS) %>% do.call("bind_rows", .) %>%
dplyr::filter(name != "devil.batch.LR") %>%
dplyr::filter(name != "devil.batch") %>%
dplyr::filter(name != "mast") %>%
dplyr::filter(ngenes >= 500, ncells >= 500)
res
res %>%
dplyr::filter(ngenes==15000, ncells==10000)
res %>%
dplyr::group_by(ncells, ngenes, name) %>%
dplyr::summarise(median_aupr = mean(aupr), sd_aupr = sd(aupr)) %>%
dplyr::mutate(cells = "N cells", genes = "N genes") %>%
ggplot(mapping = aes(x=ncells, y=median_aupr, ymin=median_aupr - sd_aupr, ymax=median_aupr+sd_aupr, col=name)) +
geom_pointrange() +
geom_line() +
ggh4x::facet_nested(~ genes + ngenes, scales = "free") +
labs(x = "", y="AUPR", fill="Algorithm") +
theme_bw() +
theme(
legend.position = "bottom",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()
)
res %>%
dplyr::group_by(ncells, ngenes, name) %>%
dplyr::summarise(median_auroc = mean(auroc), sd_auroc = sd(auroc)) %>%
dplyr::mutate(cells = "N cells", genes = "N genes") %>%
ggplot(mapping = aes(x=ncells, y=median_auroc, col=name, ymin=median_auroc-sd_auroc, ymax=median_auroc+sd_auroc)) +
geom_pointrange() +
geom_line() +
ggh4x::facet_nested(~ genes + ngenes, scales = "free") +
labs(x = "", y="AUROC", fill="Algorithm") +
theme_bw() +
theme(
legend.position = "bottom",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()
)
ggsave("img/auroc_performance.png", dpi = 300, width = 7, height = 4)
res %>%
dplyr::group_by(ncells, ngenes, name) %>%
dplyr::summarise(median_auroc = mean(auroc), sd_auroc = sd(auroc)) %>%
dplyr::mutate(cells = "N cells", genes = "N genes") %>%
ggplot(mapping = aes(x=ncells, y=median_auroc, col=name, ymin=median_auroc-sd_auroc, ymax=median_auroc+sd_auroc)) +
geom_pointrange() +
geom_line() +
ggh4x::facet_nested(~ genes + ngenes, scales = "free") +
labs(x = "", y="AUROC", fill="Algorithm") +
theme_bw() +
theme(
legend.position = "bottom"
)
res %>%
dplyr::group_by(ncells, ngenes, name) %>%
dplyr::summarise(median_auroc = mean(auroc), sd_auroc = sd(auroc)) %>%
dplyr::mutate(cells = "N cells", genes = "N genes") %>%
ggplot(mapping = aes(x=ncells, y=median_auroc, col=name, ymin=median_auroc-sd_auroc, ymax=median_auroc+sd_auroc)) +
geom_pointrange() +
geom_line() +
ggh4x::facet_nested(~ genes + ngenes, scales = "free") +
labs(x = "N cells", y="AUROC", fill="Algorithm") +
theme_bw() +
theme(
legend.position = "bottom"
)
ggsave("img/auroc_performance.png", dpi = 300, width = 7, height = 4)
res %>%
dplyr::group_by(ncells, ngenes, name) %>%
dplyr::summarise(median_auroc = mean(auroc), sd_auroc = sd(auroc)) %>%
dplyr::mutate(cells = "N cells", genes = "N genes") %>%
ggplot(mapping = aes(x=ncells, y=median_auroc, col=name, ymin=median_auroc-sd_auroc, ymax=median_auroc+sd_auroc)) +
geom_pointrange() +
geom_line() +
ggh4x::facet_nested(~ genes + ngenes, scales = "free") +
labs(x = "N cells", y="AUROC", fill="Algorithm") +
theme_bw() +
theme(
legend.position = "bottom"
) +
scale_y_continuous(trans = "log10")
res %>%
dplyr::group_by(ncells, ngenes, name) %>%
dplyr::summarise(median_auroc = mean(auroc), sd_auroc = sd(auroc)) %>%
dplyr::mutate(cells = "N cells", genes = "N genes") %>%
ggplot(mapping = aes(x=ncells, y=median_auroc, col=name, ymin=median_auroc-sd_auroc, ymax=median_auroc+sd_auroc)) +
geom_pointrange() +
geom_line() +
ggh4x::facet_nested(~ genes + ngenes, scales = "free") +
labs(x = "N cells", y="AUROC", fill="Algorithm") +
theme_bw() +
theme(
legend.position = "bottom"
) #+
my_comp <- list( c("devil", "glm"))
res %>%
dplyr::filter(ngenes == 5000, ncells == 40000) %>%
ggplot(mapping = aes(x=name, y=aupr)) +
geom_boxplot() +
ggpubr::stat_compare_means(comparisons = my_comp)
auroc_table <- res %>%
dplyr::select(name, auroc, ngenes, ncells) %>%
group_by(name, ngenes, ncells) %>%
summarise_all(list(mean=mean, sd=sd)) %>%
mutate(value = paste0(mean, ' +/- ', sd)) %>%
dplyr::select(name, ngenes, ncells, value) %>%
pivot_wider(names_from = name, values_from = value)
aupr_table <- res %>%
dplyr::select(name, aupr, ngenes, ncells) %>%
group_by(name, ngenes, ncells) %>%
summarise_all(list(mean=mean, sd=sd)) %>%
mutate(value = paste0(mean, ' +/- ', sd)) %>%
dplyr::select(name, ngenes, ncells, value) %>%
pivot_wider(names_from = name, values_from = value)
old_auroc <- auroc_table
old_aupr <- aupr_table
num_genes <- 5000
p <- res %>%
dplyr::filter(name != "devil rope", ngenes == num_genes, idx_sim != 1) %>%
dplyr::filter(name != "mast") %>%
ggplot(mapping = aes(x = factor(ncells), y=time_total, col=name)) +
geom_boxplot() +
#geom_smooth(method = "lm") +
ggtitle(paste0("Time (fit + test) comparison - ", as.integer(num_genes / 1000), "k genes")) +
labs(x = 'Number of cells', y = "Time (s)", fill = "", col="") +
#scale_y_continuous(trans = "log10") +
theme_bw()
p
res %>%
dplyr::filter(name != "devil rope", ngenes == num_genes, idx_sim != 1)
res %>%
dplyr::filter(name != "devil rope", ngenes == num_genes, idx_sim != 1) %>%
dplyr::group_by(ncells, ngenes, name) %>%
dplyr::summarise(med = median(time_total), sd = sd(time_total))
p <- res %>%
dplyr::filter(name != "devil rope", ngenes == num_genes, idx_sim != 1) %>%
dplyr::group_by(ncells, ngenes, name) %>%
dplyr::summarise(med = median(time_total), sd = sd(time_total)) +
ggplot(mapping = aes(x = ncells, y=med, ymin=med-sd, ymax=med+sd, col=name)) +
geom_pointrange() +
geom_line()
p <- res %>%
dplyr::filter(name != "devil rope", ngenes == num_genes, idx_sim != 1) %>%
dplyr::group_by(ncells, ngenes, name) %>%
dplyr::summarise(med = median(time_total), sd = sd(time_total)) %>%
ggplot(mapping = aes(x = ncells, y=med, ymin=med-sd, ymax=med+sd, col=name)) +
geom_pointrange() +
geom_line()
p
p <- res %>%
dplyr::filter(name != "devil rope", ngenes == num_genes, idx_sim != 1) %>%
dplyr::group_by(ncells, ngenes, name) %>%
dplyr::summarise(med = median(time_total), sd = sd(time_total)) %>%
ggplot(mapping = aes(x = ncells, y=med, ymin=med-sd, ymax=med+sd, col=name)) +
geom_pointrange() +
geom_line() +
#geom_smooth(method = "lm") +
ggtitle(paste0("Time (fit + test) comparison - ", as.integer(num_genes / 1000), "k genes")) +
labs(x = 'Number of cells', y = "Time (s)", fill = "", col="") +
#scale_y_continuous(trans = "log10") +
theme_bw()
p
ggsave(paste0("img/time_comparison_", num_genes, ".png"), dpi = 300, width = 7, height = 7)
ggsave(paste0("img/time_comparison_", num_genes, ".png"), dpi = 300, width = 7, height = 5)
for (num_genes in unique(res$ngenes)) {
p <- res %>%
dplyr::filter(name != "devil rope", ngenes == num_genes, idx_sim != 1) %>%
dplyr::group_by(ncells, ngenes, name) %>%
dplyr::summarise(med = median(time_total), sd = sd(time_total)) %>%
ggplot(mapping = aes(x = ncells, y=med, ymin=med-sd, ymax=med+sd, col=name)) +
geom_pointrange() +
geom_line() +
#geom_smooth(method = "lm") +
ggtitle(paste0("Time (fit + test) comparison - ", as.integer(num_genes / 1000), "k genes")) +
labs(x = 'Number of cells', y = "Time (s)", fill = "", col="") +
#scale_y_continuous(trans = "log10") +
theme_bw()
ggsave(paste0("img/time_comparison_", num_genes, ".png"), dpi = 300, width = 7, height = 5)
}
setwd("~/Desktop/dottorato/rdevil_project/benchmark_de")
rm(list = ls())
require(tidyverse)
require(ggplot2)
# read general results
res <- lapply(list.files("results/general_res/", full.names = T), readRDS) %>% do.call("bind_rows", .) %>%
dplyr::filter(name != "devil.batch.LR") %>%
dplyr::filter(name != "devil.batch") %>%
dplyr::filter(name != "mast") %>%
dplyr::filter(ngenes >= 500, ncells >= 500)
res %>%
dplyr::filter(ngenes==15000, ncells==10000)
res %>%
dplyr::group_by(ncells, ngenes, name) %>%
dplyr::summarise(median_aupr = mean(aupr), sd_aupr = sd(aupr)) %>%
dplyr::mutate(cells = "N cells", genes = "N genes") %>%
ggplot(mapping = aes(x=ncells, y=median_aupr, ymin=median_aupr - sd_aupr, ymax=median_aupr+sd_aupr, col=name)) +
geom_pointrange() +
geom_line() +
ggh4x::facet_nested(~ genes + ngenes, scales = "free") +
labs(x = "", y="AUPR", fill="Algorithm") +
theme_bw() +
theme(
legend.position = "bottom",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()
)
res %>%
dplyr::group_by(ncells, ngenes, name) %>%
dplyr::summarise(median_auroc = mean(auroc), sd_auroc = sd(auroc)) %>%
dplyr::mutate(cells = "N cells", genes = "N genes") %>%
ggplot(mapping = aes(x=ncells, y=median_auroc, col=name, ymin=median_auroc-sd_auroc, ymax=median_auroc+sd_auroc)) +
geom_pointrange() +
geom_line() +
ggh4x::facet_nested(~ genes + ngenes, scales = "free") +
labs(x = "N cells", y="AUROC", fill="Algorithm") +
theme_bw() +
theme(
legend.position = "bottom"
) #+
setwd("~/Desktop/dottorato/rdevil_project/benchmark_de")
rm(list = ls())
require(tidyverse)
require(ggplot2)
# read general results
res <- lapply(list.files("results/general_res/", full.names = T), readRDS) %>% do.call("bind_rows", .) %>%
dplyr::filter(name != "devil.batch.LR") %>%
dplyr::filter(name != "devil.batch") %>%
dplyr::filter(name != "mast") %>%
dplyr::filter(ngenes >= 500, ncells >= 500)
res %>%
dplyr::filter(ngenes==15000, ncells==10000)
res %>%
dplyr::group_by(ncells, ngenes, name) %>%
dplyr::summarise(median_aupr = mean(aupr), sd_aupr = sd(aupr)) %>%
dplyr::mutate(cells = "N cells", genes = "N genes") %>%
ggplot(mapping = aes(x=ncells, y=median_aupr, ymin=median_aupr - sd_aupr, ymax=median_aupr+sd_aupr, col=name)) +
geom_pointrange() +
geom_line() +
ggh4x::facet_nested(~ genes + ngenes, scales = "free") +
labs(x = "", y="AUPR", fill="Algorithm") +
theme_bw() +
theme(
legend.position = "bottom",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()
)
res %>%
dplyr::group_by(ncells, ngenes, name) %>%
dplyr::summarise(median_auroc = mean(auroc), sd_auroc = sd(auroc)) %>%
dplyr::mutate(cells = "N cells", genes = "N genes") %>%
ggplot(mapping = aes(x=ncells, y=median_auroc, col=name, ymin=median_auroc-sd_auroc, ymax=median_auroc+sd_auroc)) +
geom_pointrange() +
geom_line() +
ggh4x::facet_nested(~ genes + ngenes, scales = "free") +
labs(x = "N cells", y="AUROC", fill="Algorithm") +
theme_bw() +
theme(
legend.position = "bottom"
) #+
#scale_y_continuous(trans = "log10")
ggsave("img/auroc_performance.png", dpi = 300, width = 7, height = 4)
my_comp <- list( c("devil", "glm"))
res %>%
dplyr::filter(ngenes == 5000, ncells == 40000) %>%
ggplot(mapping = aes(x=name, y=aupr)) +
geom_boxplot() +
ggpubr::stat_compare_means(comparisons = my_comp)
auroc_table <- res %>%
dplyr::select(name, auroc, ngenes, ncells) %>%
group_by(name, ngenes, ncells) %>%
summarise_all(list(mean=mean, sd=sd)) %>%
mutate(value = paste0(mean, ' +/- ', sd)) %>%
dplyr::select(name, ngenes, ncells, value) %>%
pivot_wider(names_from = name, values_from = value)
aupr_table <- res %>%
dplyr::select(name, aupr, ngenes, ncells) %>%
group_by(name, ngenes, ncells) %>%
summarise_all(list(mean=mean, sd=sd)) %>%
mutate(value = paste0(mean, ' +/- ', sd)) %>%
dplyr::select(name, ngenes, ncells, value) %>%
pivot_wider(names_from = name, values_from = value)
old_auroc <- auroc_table
old_aupr <- aupr_table
for (num_genes in unique(res$ngenes)) {
p <- res %>%
dplyr::filter(name != "devil rope", ngenes == num_genes, idx_sim != 1) %>%
dplyr::group_by(ncells, ngenes, name) %>%
dplyr::summarise(med = median(time_total), sd = sd(time_total)) %>%
ggplot(mapping = aes(x = ncells, y=med, ymin=med-sd, ymax=med+sd, col=name)) +
geom_pointrange() +
geom_line() +
#geom_smooth(method = "lm") +
ggtitle(paste0("Time (fit + test) comparison - ", as.integer(num_genes / 1000), "k genes")) +
labs(x = 'Number of cells', y = "Time (s)", fill = "", col="") +
#scale_y_continuous(trans = "log10") +
theme_bw()
ggsave(paste0("img/time_comparison_", num_genes, ".png"), dpi = 300, width = 7, height = 5)
}
num_genes <- 15000
res %>%
dplyr::filter(name != "devil rope", ngenes == num_genes, idx_sim != 1) %>%
dplyr::group_by(ncells, ngenes, name) %>%
dplyr::summarise(med = median(time_total), sd = sd(time_total))
res %>%
dplyr::filter(name != "devil rope", ngenes == num_genes, idx_sim != 1) %>%
dplyr::group_by(ncells, ngenes, name) %>%
dplyr::summarise(med = median(time_total), sd = sd(time_total)) %>%
ggplot(mapping = aes(x = ncells, y=med, ymin=med-sd, ymax=med+sd, col=name)) +
geom_pointrange() +
geom_line()
p <- res %>%
dplyr::filter(name != "devil rope", ngenes == num_genes, idx_sim != 1) %>%
dplyr::group_by(ncells, ngenes, name) %>%
dplyr::summarise(med = median(time_total), sd = sd(time_total)) %>%
ggplot(mapping = aes(x = ncells, y=med, ymin=med-sd, ymax=med+sd, col=name)) +
geom_pointrange() +
geom_line() +
#geom_smooth(method = "lm") +
ggtitle(paste0("Time (fit + test) comparison - ", as.integer(num_genes / 1000), "k genes")) +
labs(x = 'Number of cells', y = "Time (s)", fill = "", col="") +
scale_y_continuous(trans = "log10") +
theme_bw()
p
num_genes <- 5000
p <- res %>%
dplyr::filter(name != "devil rope", ngenes == num_genes, idx_sim != 1) %>%
dplyr::group_by(ncells, ngenes, name) %>%
dplyr::summarise(med = median(time_total), sd = sd(time_total)) %>%
ggplot(mapping = aes(x = ncells, y=med, ymin=med-sd, ymax=med+sd, col=name)) +
geom_pointrange() +
geom_line() +
#geom_smooth(method = "lm") +
ggtitle(paste0("Time (fit + test) comparison - ", as.integer(num_genes / 1000), "k genes")) +
labs(x = 'Number of cells', y = "Time (s)", fill = "", col="") +
scale_y_continuous(trans = "log10") +
theme_bw()
p
num_genes <- 5000
for (num_genes in unique(res$ngenes)) {
p <- res %>%
dplyr::filter(name != "devil rope", ngenes == num_genes, idx_sim != 1) %>%
dplyr::group_by(ncells, ngenes, name) %>%
dplyr::summarise(med = median(time_total), sd = sd(time_total)) %>%
ggplot(mapping = aes(x = ncells, y=med, ymin=med-sd, ymax=med+sd, col=name)) +
geom_pointrange() +
geom_line() +
#geom_smooth(method = "lm") +
ggtitle(paste0("Time (fit + test) comparison - ", as.integer(num_genes / 1000), "k genes")) +
labs(x = 'Number of cells', y = "Time (s)", fill = "", col="") +
scale_y_continuous(trans = "log10") +
theme_bw()
ggsave(paste0("img/time_comparison_", num_genes, ".png"), dpi = 300, width = 7, height = 5)
}
setwd("~/Desktop/dottorato/rdevil_project/de_analysis")
require(tidyverse)
rm(list = ls())
require(patchwork)
# Null test
for (author in c("bca", "yazar")) {
for (is.pb in c(FALSE, TRUE)) {
plots1 <- lapply(1:3, function(ct.index) {
if (is.pb) {
head_foler = "nullpower/null_subject/"
} else {
head_foler = "nullpower/null_cell/"
}
d1 <- read.delim(paste0(head_foler, author ,".n.10.ct.",ct.index,".fc.0.5.csv"), sep = ",")
d2 <- read.delim(paste0(head_foler, "devil.", author, ".n.10.ct.",ct.index,".fc.0.5.csv"), sep = ",")
#d1$devil = d2$devil
#d1$devil.mixed = d2$devil..Mixed.
d1$devil.hess = d2$devil.hess
d1$devil.hess.mixed = d2$devil.hess..Mixed.
cols <- colnames(d1)
d <- lapply(2:ncol(d1), function(c) {
values = d1[,c] %>% sort()
x = seq(0,1,length = length(values))
dplyr::tibble(x = x, observed_p_value = values, name = colnames(d1)[c])
}) %>% do.call("bind_rows", .)
d %>%
ggplot(mapping = aes(x=x, y=observed_p_value, col=name)) +
geom_point(size = .1) +
geom_line() +
geom_abline(slope = 1, intercept = 0, col = "black", linetype="dashed") +
ggtitle(paste0(ct.index, " - ", is.pb)) +
theme_bw() +
#scale_color_manual(values = c("steelblue", "yellow", "indianred3", "orange", "purple", "forestgreen", "pink")) +
ggsci::scale_color_locuszoom()
})
p <- ggpubr::ggarrange(plotlist = plots1, ncol = 3, nrow = 1)
p <- plots1[[1]] + plots1[[3]] + plot_layout(guides = "collect")
ggsave(filename = paste0("img/",author,"_is_pb_", is.pb, "_null.png"), dpi = 300, width = 7, height = 4)
}
}
# Null test
for (author in c("bca", "yazar")) {
for (is.pb in c(FALSE, TRUE)) {
plots1 <- lapply(1:3, function(ct.index) {
if (is.pb) {
head_foler = "nullpower/null_subject/"
} else {
head_foler = "nullpower/null_cell/"
}
d1 <- read.delim(paste0(head_foler, author ,".n.10.ct.",ct.index,".fc.0.5.csv"), sep = ",")
d2 <- read.delim(paste0(head_foler, "devil.", author, ".n.10.ct.",ct.index,".fc.0.5.csv"), sep = ",")
#d1$devil = d2$devil
#d1$devil.mixed = d2$devil..Mixed.
d1$devil.hess = d2$devil.hess
d1$devil.hess.mixed = d2$devil.hess..Mixed.
cols <- colnames(d1)
d <- lapply(2:ncol(d1), function(c) {
values = d1[,c] %>% sort()
x = seq(0,1,length = length(values))
dplyr::tibble(x = x, observed_p_value = values, name = colnames(d1)[c])
}) %>% do.call("bind_rows", .)
d %>%
ggplot(mapping = aes(x=x, y=observed_p_value, col=name)) +
geom_point(size = .3) +
geom_line() +
geom_abline(slope = 1, intercept = 0, col = "black", linetype="dashed") +
ggtitle(paste0(ct.index, " - ", is.pb)) +
theme_bw() +
#scale_color_manual(values = c("steelblue", "yellow", "indianred3", "orange", "purple", "forestgreen", "pink")) +
ggsci::scale_color_locuszoom()
})
p <- ggpubr::ggarrange(plotlist = plots1, ncol = 3, nrow = 1)
p <- plots1[[1]] + plots1[[3]] + plot_layout(guides = "collect")
ggsave(filename = paste0("img/",author,"_is_pb_", is.pb, "_null.png"), dpi = 300, width = 7, height = 4)
}
}
# Pow test
for (author in c("bca", "yazar")) {
for (is.pb in c(FALSE, TRUE)) {
plots1 <- lapply(1:6, function(ct.index) {
if (is.pb) {
head_foler = "nullpower/pow_subject/"
} else {
head_foler = "nullpower/pow_cell/"
}
d1 <- read.delim(paste0(head_foler, author ,".n.10.ct.",ct.index,".fc.0.5.csv"), sep = ",")
d2 <- read.delim(paste0(head_foler, "devil.", author, ".n.10.ct.",ct.index,".fc.0.5.csv"), sep = ",")
#d1$devil = d2$devil
#d1$devil.mixed = d2$devil..Mixed.
d1$devil.hess = d2$devil.hess
d1$devil.hess.mixed = d2$devil.hess..Mixed.
cols <- colnames(d1)
d <- lapply(2:ncol(d1), function(c) {
values = d1[,c] %>% sort(decreasing = TRUE)
values[values <= 1e-300] = 1e-300
x = seq(0,1,length = length(values))
dplyr::tibble(x = x, observed_p_value = -log10(values), name = colnames(d1)[c])
}) %>% do.call("bind_rows", .)
d %>%
ggplot(mapping = aes(x=x, y=observed_p_value, col=name)) +
geom_point(size = .8) +
ggtitle(paste0(ct.index, " - ", is.pb)) +
theme_bw() +
scale_y_continuous(trans = "log10") +
#scale_color_manual(values = c("steelblue", "yellow", "indianred3", "orange", "purple", "forestgreen", "pink")) +
ggsci::scale_color_locuszoom()
})
p <- ggpubr::ggarrange(plotlist = plots1)
p <- plots1[[1]] + plots1[[3]] + plot_layout(guides = "collect")
ggsave(filename = paste0("img/",author,"_is_pb_", is.pb, "_pow.png"), dpi = 300, width = 7, height = 4)
}
}
